# Generated by Django 3.2.4 on 2021-08-09 05:52

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('item', '0005_auto_20210607_1746'),
    ]

    operations = [
        migrations.CreateModel(
            name='ItemAttributeScale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attribute', models.CharField(blank=True, max_length=10, null=True)),
                ('value', models.DecimalField(blank=True, decimal_places=4, max_digits=5, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ItemPerkAttribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attribute', models.CharField(blank=True, max_length=10, null=True)),
                ('value', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Perk',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название')),
                ('internal_id', models.CharField(blank=True, db_index=True, editable=False, max_length=255, null=True)),
                ('name_en', models.CharField(blank=True, db_index=True, max_length=255, null=True, verbose_name='Название(оригинал)')),
                ('name_slug', models.CharField(blank=True, db_index=True, editable=False, max_length=255, null=True)),
                ('icon', models.ImageField(blank=True, upload_to='images/items/perk/', verbose_name='Изображение')),
                ('description', models.CharField(blank=True, max_length=255, null=True, verbose_name='Описание')),
                ('description_en', models.CharField(blank=True, max_length=255, null=True, verbose_name='Описание (оригинал)')),
                ('tier', models.IntegerField(db_index=True, default=0)),
                ('rarity', models.IntegerField(db_index=True, default=0)),
                ('fishRarityRollModifier', models.IntegerField(db_index=True, default=0)),
                ('fishSizeRollModifier', models.IntegerField(db_index=True, default=0)),
                ('dayPhases', models.CharField(blank=True, max_length=255, null=True)),
                ('fishingWaterType', models.CharField(blank=True, max_length=255, null=True)),
                ('scalingPerGearScore', models.DecimalField(blank=True, decimal_places=20, max_digits=21, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PerkType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название')),
                ('name_en', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название(оригинал)')),
                ('name_slug', models.CharField(blank=True, db_index=True, editable=False, max_length=255, null=True)),
                ('internal_id', models.CharField(blank=True, db_index=True, editable=False, max_length=255, null=True)),
            ],
        ),
        migrations.DeleteModel(
            name='CraftSubCategory',
        ),
        migrations.RemoveField(
            model_name='itemingredient',
            name='ingredient',
        ),
        migrations.RemoveField(
            model_name='itemingredient',
            name='item',
        ),
        migrations.RemoveField(
            model_name='resource',
            name='category',
        ),
        migrations.RemoveField(
            model_name='resource',
            name='slot',
        ),
        migrations.RemoveField(
            model_name='resource',
            name='type',
        ),
        migrations.RenameField(
            model_name='item',
            old_name='bop',
            new_name='bindOnEquip',
        ),
        migrations.RemoveField(
            model_name='item',
            name='crafted_by',
        ),
        migrations.RemoveField(
            model_name='item',
            name='gear_score',
        ),
        migrations.RemoveField(
            model_name='item',
            name='slot',
        ),
        migrations.RemoveField(
            model_name='item',
            name='title',
        ),
        migrations.RemoveField(
            model_name='item',
            name='type',
        ),
        migrations.AddField(
            model_name='item',
            name='baseDamage',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='item',
            name='bindOnPickup',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='item',
            name='blockStability',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='item',
            name='blockStaminaDamage',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='item',
            name='block_stability',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='item',
            name='can_be_crafted',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='item',
            name='critChance',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='item',
            name='critDamageMultiplier',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='item',
            name='description',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Описание предмета'),
        ),
        migrations.AddField(
            model_name='item',
            name='description_en',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Описание предмета (оригинал)'),
        ),
        migrations.AddField(
            model_name='item',
            name='durability',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='item',
            name='gearScore',
            field=models.IntegerField(blank=True, db_index=True, null=True),
        ),
        migrations.AddField(
            model_name='item',
            name='gearScoreMax',
            field=models.IntegerField(blank=True, db_index=True, null=True),
        ),
        migrations.AddField(
            model_name='item',
            name='gearScoreMin',
            field=models.IntegerField(blank=True, db_index=True, null=True),
        ),
        migrations.AddField(
            model_name='item',
            name='hasRandomPerks',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='item',
            name='icon',
            field=models.ImageField(blank=True, upload_to='images/items/icons/', verbose_name='Иконка'),
        ),
        migrations.AddField(
            model_name='item',
            name='internal_id',
            field=models.CharField(blank=True, db_index=True, editable=False, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='item',
            name='namedItem',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='item',
            name='quest_reward',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='item',
            name='weight',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='itemcategory',
            name='internal_id',
            field=models.CharField(blank=True, db_index=True, editable=False, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='itemsubcategory',
            name='internal_id',
            field=models.CharField(blank=True, db_index=True, editable=False, max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='item',
            name='image',
            field=models.ImageField(blank=True, upload_to='images/items/full/', verbose_name='Изображение'),
        ),
        migrations.AlterField(
            model_name='item',
            name='level',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='item',
            name='name_en',
            field=models.CharField(blank=True, db_index=True, max_length=255, null=True, verbose_name='Название предмета(оригинал)'),
        ),
        migrations.AlterField(
            model_name='item',
            name='rarity',
            field=models.IntegerField(db_index=True, default=0),
        ),
        migrations.AlterField(
            model_name='item',
            name='subcategory',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='item.itemsubcategory', verbose_name='Категория '),
        ),
        migrations.AlterField(
            model_name='item',
            name='tier',
            field=models.IntegerField(db_index=True, default=0),
        ),
        migrations.AlterField(
            model_name='itemcategory',
            name='name',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='itemcategory',
            name='name_en',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Название(оригинал)'),
        ),
        migrations.AlterField(
            model_name='itemsubcategory',
            name='name',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='itemsubcategory',
            name='name_en',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Название(оригинал)'),
        ),
        migrations.DeleteModel(
            name='CraftCategory',
        ),
        migrations.DeleteModel(
            name='ItemIngredient',
        ),
        migrations.DeleteModel(
            name='ItemSlot',
        ),
        migrations.DeleteModel(
            name='ItemType',
        ),
        migrations.DeleteModel(
            name='Resource',
        ),
        migrations.DeleteModel(
            name='ResourceCategory',
        ),
        migrations.DeleteModel(
            name='ResourceSlot',
        ),
        migrations.DeleteModel(
            name='ResourceType',
        ),
        migrations.AddField(
            model_name='perk',
            name='type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='item.perktype', verbose_name='Тип перка '),
        ),
        migrations.AddField(
            model_name='itemperkattribute',
            name='item',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='perk_attributes', to='item.item', verbose_name='Предмет'),
        ),
        migrations.AddField(
            model_name='itemattributescale',
            name='item',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='scale_attributes', to='item.item', verbose_name='Предмет'),
        ),
        migrations.AddField(
            model_name='item',
            name='perks',
            field=models.ManyToManyField(blank=True, to='item.Perk'),
        ),
    ]
